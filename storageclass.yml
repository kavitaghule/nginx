#paste cmd for create secrets
#kubectl create secret generic aws-secret --from-literal=AWS_ACCESS_KEY_ID="" --from-literal=AWS_SECRET_ACCESS_KEY=""
#install helm=curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
#chmod 700 get_helm.sh
#./get_helm.sh
#install csidriver= kubectl create secret generic aws-secret --namespace kube-system --from-literal "key_id=${AWS_ACCESS_KEY_ID}"--from-literal "access_key=${AWS_SECRET_ACCESS_KEY}"
#helm repo add aws-ebs-csi-driver https://kubernetes-sigs.github.io/aws-ebs-csi-driver
#helm repo update
#helm upgrade --install aws-ebs-csi-driver --namespace kube-system aws-ebs-csi-driver/aws-ebs-csi-driver
#kubectl get pods -n kube-system -l app.kubernetes.io/name=aws-ebs-csi-driver
#kubectl apply -f pvc.yaml
#kubectl apply -f storageclass.yaml
#kubectl apply -f pod.yaml
#kubectl exec -it app -- df -h /data

# ways to create driver
static provisioning Manually create PV manifest files: You can manually create PV manifest files 
specifying the details of the volume, such as type, capacity, access modes, and the storage backend 
(e.g., AWS EBS, GCP Persistent Disk, NFS).
dynamic provisioning:  Popular dynamic provisioning solutions include:
AWS EBS CSI Driver
GCP Persistent Disk CSI Driver
NFS CSI Driver
CSI Drivers: Container Storage Interface (CSI) Drivers allow third-party storage providers to integrate with Kubernetes.
Local Volumes: Kubernetes supports local storage provisioning for PVs using hostPath volumes.
Manual Provisioning: Administrators can manually provision storage outside of Kubernetes and then 
manually create PVs referencing the pre-provisioned storage.
Cloud Provider Services: Cloud providers offer managed storage services that can be used as PVs in Kubernetes.

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ebs-sc
provisioner: ebs.csi.aws.com
volumeBindingMode: immediate #/WaitForFirstConsumer
parameters:
  csi.storage.k8s.io/fstype: xfs
  type: gp2
  iopsPerGB: "50"
  encrypted: "true"
allowedTopologies:
- matchLabelExpressions:
  - key: topology.ebs.csi.aws.com/zone
    values:
    - us-east-2c
